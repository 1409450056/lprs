<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Orders">
    <!--@mbg.generated-->
    <id column="orderNo" jdbcType="INTEGER" property="orderno" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="deployTime" jdbcType="TIMESTAMP" property="deploytime" />
    <result column="leftTime" jdbcType="TIMESTAMP" property="lefttime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <association property="orderprice" javaType="com.example.demo.model.Orderprice">
      <id column="orderno" property="orderno"/>
      <result column="price" property="price"/>
    </association>

  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    orderNo, `number`, deployTime, leftTime, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    o.<include refid="Base_Column_List" />,price
    from orders o left join orderprice op
    on o.orderNo = op.orderNo
    where o.orderNo = #{orderno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from orders
    where orderNo = #{orderno,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="orderNo" keyProperty="orderno" parameterType="com.example.demo.model.Orders" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into orders (`number`, deployTime, leftTime,
      `status`)
    values (#{number,jdbcType=VARCHAR}, #{deploytime,jdbcType=TIMESTAMP}, #{lefttime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="orderNo" keyProperty="orderno" parameterType="com.example.demo.model.Orders" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        `number`,
      </if>
      <if test="deploytime != null">
        deployTime,
      </if>
      <if test="lefttime != null">
        leftTime,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="deploytime != null">
        #{deploytime,jdbcType=TIMESTAMP},
      </if>
      <if test="lefttime != null">
        #{lefttime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Orders">
    <!--@mbg.generated-->
    update orders
    <set>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="deploytime != null">
        deployTime = #{deploytime,jdbcType=TIMESTAMP},
      </if>
      <if test="lefttime != null">
        leftTime = #{lefttime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where orderNo = #{orderno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Orders">
    <!--@mbg.generated-->
    update orders
    set `number` = #{number,jdbcType=VARCHAR},
      deployTime = #{deploytime,jdbcType=TIMESTAMP},
      leftTime = #{lefttime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where orderNo = #{orderno,jdbcType=INTEGER}
  </update>

  <select id="selectFinished" resultMap="BaseResultMap">
    select
    o.<include refid="Base_Column_List" />,price
    from orders o,orderprice op
    where o.orderNo = op.orderNo
  </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        o.<include refid="Base_Column_List" />,price
        from orders o left join orderprice op
        on o.orderNo = op.orderNo
    </select>

    <select id="getAllStatus" resultType="java.lang.Integer" parameterType="java.lang.String">
        select
        status
        from orders
        where number = #{number,jdbcType=VARCHAR}
    </select>
    <update id="finishOrder" parameterType="com.example.demo.model.Orders">
        update orders o, orderprice op
        set
        o.leftTime = #{lefttime,jdbcType=TIMESTAMP},
        o.status = #{status,jdbcType=INTEGER},
        op.price = #{orderprice.price,jdbcType=INTEGER}
        where o.orderNo = #{orderno,jdbcType=INTEGER}
        and o.orderNo = op.orderNo
    </update>

  <select id="getOrderNo" parameterType="java.lang.String" resultType="java.lang.Integer">
    select orderNo from orders where number = #{number,jdbcType=VARCHAR} and status = 0
  </select>
</mapper>
